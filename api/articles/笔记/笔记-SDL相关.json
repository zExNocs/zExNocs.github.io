{"title":"SDL","uid":"359ddc0f0d8ca8ada4d26ac9b618d2df","slug":"笔记/笔记-SDL相关","date":"2024-07-01T16:05:30.000Z","updated":"2024-10-18T20:49:10.123Z","comments":true,"path":"api/articles/笔记/笔记-SDL相关.json","keywords":null,"cover":"\\img\\post\\笔记\\笔记-SDL相关\\cover.png","content":"<h1 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\"></a> 🔖介绍</h1>\n<p>SDL是 <code>c</code> 语言的库，因此其主要是面向过程的函数。</p>\n<p>该笔记主要用于记录一些SDL常用的类和接口，以及其介绍。<br />\n目前收录的库主要有下面几种：</p>\n<ul>\n<li><a href=\"https://github.com/libsdl-org/SDL\">SDL 本体</a></li>\n<li><a href=\"https://github.com/libsdl-org/SDL_ttf\">SDL_ttf 文字渲染</a></li>\n<li><a href=\"https://github.com/libsdl-org/SDL_image\">SDL_image 图片渲染</a></li>\n<li><a href=\"https://github.com/libsdl-org/SDL_mixer\">SDL_mixer 音媒体</a></li>\n<li><a href=\"https://www.ferzkopp.net/wordpress/2016/01/02/sdl_gfx-sdl2_gfx/\">SDL_gfx 图形绘制</a></li>\n</ul>\n<h1 id=\"sdl-文档\"><a class=\"markdownIt-Anchor\" href=\"#sdl-文档\"></a> SDL 文档</h1>\n<ul>\n<li><a href=\"wiki.libsdl.org/SDL2\">SDL wiki</a></li>\n</ul>\n<h1 id=\"sdl-常用类和相关接口\"><a class=\"markdownIt-Anchor\" href=\"#sdl-常用类和相关接口\"></a> SDL 常用类和相关接口</h1>\n<p>带 <code>~</code> 的表示非类内部函数。</p>\n<h2 id=\"基础函数接口\"><a class=\"markdownIt-Anchor\" href=\"#基础函数接口\"></a> 基础函数接口</h2>\n<h3 id=\"1-初始化相关\"><a class=\"markdownIt-Anchor\" href=\"#1-初始化相关\"></a> 1. 初始化相关</h3>\n<ul>\n<li><code>int SDL_Init(Uint32 flags)</code>：SDL初始化\n<ul>\n<li><code>flags</code>：相关标记\n<ul>\n<li><code>SDL_INIT_EVERYTHING</code>：初始化所有</li>\n</ul>\n</li>\n<li>返回值\n<ul>\n<li><code>0</code> 表示初始化成功</li>\n<li>负数表示初始化失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>SDL_bool SDL_SetHint(char* name, char* value)</code>：SDL设置建议\n<ul>\n<li><code>name</code>：建议名称\n<ul>\n<li><code>SDL_HINT_IME_SHOW_UI</code>：显示 <code>IME</code> (候选词列表)</li>\n</ul>\n</li>\n<li><code>value</code>：启用值\n<ul>\n<li><code>1</code>：表示开启</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>int IMG_Init(int flags)</code>：SDL图片初始化\n<ul>\n<li><code>flags</code>：相关标记，标记之间用 <code>|</code> 来相隔\n<ul>\n<li><code>IMG_INIT_JPG</code>：<code>jpg</code> 格式图片</li>\n<li><code>IMG_INIT_PNG</code>：<code>png</code> 格式图片</li>\n</ul>\n</li>\n<li>返回值：返回初始化成功的值</li>\n</ul>\n</li>\n<li><code>int Mix_Init()</code>：音乐初始化\n<ul>\n<li>返回值：返回初始化成功的值</li>\n</ul>\n</li>\n<li><code>int Mix_OpenAudio(int frequency, Uint16 format, int channels, int chunksize)</code>：打开播放器\n<ul>\n<li>一般直接使用 <code>Mix_OpenAudio(44100, MIX_DEFAULT_FORMAT, 2, 2048)</code></li>\n<li>返回值\n<ul>\n<li><code>0</code>：成功</li>\n<li><code>-1</code>：失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>int TTF_Init()</code>：文字初始化\n<ul>\n<li>返回值\n<ul>\n<li><code>0</code>：成功</li>\n<li><code>-1</code>：失败</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"sdl_window-窗口类\"><a class=\"markdownIt-Anchor\" href=\"#sdl_window-窗口类\"></a> <code>SDL_Window</code> 窗口类</h2>\n<ul>\n<li>\n<p><code>~ SDL_Window* SDL_CreateWindow(char* strTitle, int x, int y, int w, int h, Uint32 flags)</code>：创建窗口函数</p>\n<ul>\n<li><code>strTitle</code>：窗口标题。例如 <code>u8&quot;你好，世界&quot;</code>。</li>\n<li><code>x</code>：窗口所在屏幕横坐标\n<ul>\n<li>SDL_WINDOWPOS_CENTERED：屏幕正中间</li>\n</ul>\n</li>\n<li><code>y</code>：窗口所在屏幕纵坐标\n<ul>\n<li><code>SDL_WINDOWPOS_CENTERED</code>：屏幕正中间</li>\n</ul>\n</li>\n<li><code>w</code>：窗口宽度</li>\n<li><code>h</code>：窗口高度</li>\n<li><code>flags</code>：相关标记\n<ul>\n<li><code>SDL_WINDOW_SHOWN</code>：展示窗口</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code>~ SDL_ShowSimpleMessageBox(Uint32 flags, char* strTitile, char* strMessage, SDL_Window* pWindow)</code>：弹信息子窗口</p>\n<ul>\n<li><code>flags</code>：窗口类型\n<ul>\n<li><code>SDL_MESSAGEBOX_ERROR</code>：错误类型窗口</li>\n</ul>\n</li>\n<li><code>strTitile</code>：窗口标题</li>\n<li><code>strMessage</code>：窗口信息</li>\n<li><code>pWindow</code>：父窗口指针</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"sdl_renderer-渲染器\"><a class=\"markdownIt-Anchor\" href=\"#sdl_renderer-渲染器\"></a> <code>SDL_Renderer</code> 渲染器</h2>\n<p>用于控制如何在窗口 <code>Window</code> 类绘制图像，可以渲染 <code>Texture</code> 类。</p>\n<ul>\n<li><code>~ SDL_Renderer* SDL_CreateRenderer(SDL_Window* pWindow, int index, Uint32 flags)</code>：创建渲染器函数\n<ul>\n<li><code>pWindow</code>：渲染器所渲染的窗口</li>\n<li><code>index</code>：渲染器索引。初始值为 <code>-1</code></li>\n<li><code>flags</code>：相关标记，标记之间用 <code>|</code> 来相隔\n<ul>\n<li><code>SDL_RENDERERR_ACCELERRATED</code>：硬件加速</li>\n<li><code>SDL_RENDERER_PRESENTVSYNC</code>：垂直同步</li>\n<li><code>SDL_RENDERER_TARGETTEXTURE</code>：渲染目标为纹理</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>~ SDL_RenderCopy(SDL_Renderer* pRenderer, )</code>：TODO\n<ul>\n<li><code>pRenderer</code>：渲染器指针</li>\n</ul>\n</li>\n<li><code>~ SDL_RenderPresent(SDL_Renderer* pRenderer)</code>：更新画面(类似于双缓冲)。\n<ul>\n<li><code>pRenderer</code>：渲染器指针</li>\n</ul>\n</li>\n<li><code>~ SDL_RenderClear()</code>：TODO</li>\n<li><code>~ SDL_RenderClear()</code>：TODO</li>\n<li><code>~ SDL_SetRenderDrawColor</code>：TODO</li>\n</ul>\n<h2 id=\"sdl_surface-平面类\"><a class=\"markdownIt-Anchor\" href=\"#sdl_surface-平面类\"></a> <code>SDL_Surface</code> 平面类</h2>\n<p>平面类指的是内存中的图像表示，可以看做是一张位图，包含了图像的像素数据、宽度、高度和像素格式等信息。主要用于在CPU端进行图像操作，例如加载图像文件、处理像素数据、创建临时的图像等。<br />\n平面类可以被修改绘制。</p>\n<ul>\n<li><code>~ SDL_Surface* IMG_Load(char* strPath)</code>：加载图片，以 <code>Surface</code> 类的形式保存\n<ul>\n<li><code>strPath</code>：图片路径</li>\n</ul>\n</li>\n<li><code>~ SDL_Surface* TTF_RenderUTF8_Blended(TTF_font* pFont, char* strText, SDL_Color oColor)</code>：加载文字，以 <code>Surface</code> 类的形式保存\n<ul>\n<li><code>pFont</code>：字体类型</li>\n<li><code>strText</code>：文字</li>\n<li><code>oColor</code>：字体颜色</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"sdl_texture-纹理类\"><a class=\"markdownIt-Anchor\" href=\"#sdl_texture-纹理类\"></a> <code>SDL_Texture</code> 纹理类</h2>\n<p>纹理类是用于GPU端进行像素处理的对象，适合高效地图像渲染。包含了图像数据在显存中的表示。<br />\n纹理类无法被修改，通常是使用平面类转化成纹理类，然后使用渲染器将其放在窗口上。</p>\n<ul>\n<li><code>~ SDL_Texture* SDL_CreateTexturreFromSurface(SDL_Renderer* pRenderer, SDL_Surface* pSurface)</code>：将 <code>Surface</code> 类转化为 <code>Texture</code> 类\n<ul>\n<li><code>pRenderer</code>：渲染器</li>\n<li><code>pSurface</code>：被转化的平面类</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"sdl_event-事件类\"><a class=\"markdownIt-Anchor\" href=\"#sdl_event-事件类\"></a> <code>SDL_Event</code> 事件类</h2>\n<ul>\n<li><code>type</code>：事件类型属性\n<ul>\n<li><code>SDL_QUIT</code>：退出类型</li>\n<li><code>SDL_MOUSEMOTION</code>：鼠标移动类型</li>\n</ul>\n</li>\n<li><code>motion</code>：鼠标移动类型相关参数\n<ul>\n<li><code>x</code>：当前鼠标横坐标</li>\n<li><code>y</code>：当前鼠标纵坐标</li>\n</ul>\n</li>\n<li><code>~ bool SDL_PollEvent(SDL_Event* pEvent)</code>：拉取事件\n<ul>\n<li><code>pEvent</code>：被获取的事件/被赋值的事件</li>\n<li>如果没有事件返回 <code>false</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"sdl_color-颜色类\"><a class=\"markdownIt-Anchor\" href=\"#sdl_color-颜色类\"></a> <code>SDL_Color</code> 颜色类</h2>\n<h2 id=\"ttf_font-字体类\"><a class=\"markdownIt-Anchor\" href=\"#ttf_font-字体类\"></a> <code>TTF_Font</code> 字体类</h2>\n<ul>\n<li><code>~ TTF_Font* TTF_OpenFont(char* strPath, int iSize)</code>：加载文字类型文件\n<ul>\n<li><code>strPath</code>：文字类型路径</li>\n<li><code>iSize</code>：字体大小</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"mix_music-音乐类\"><a class=\"markdownIt-Anchor\" href=\"#mix_music-音乐类\"></a> <code>Mix_Music</code> 音乐类</h2>\n<ul>\n<li><code>~ Mix_Music* Mix_LoadMUS(char* strPath)</code>：加载音乐\n<ul>\n<li><code>strPath</code>：路径</li>\n</ul>\n</li>\n</ul>\n","feature":false,"text":"关于SDL库相关的常用的类和接口的笔记。...","permalink":"/post/笔记/笔记-SDL相关","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"笔记","slug":"笔记","count":8,"path":"api/categories/笔记.json"}],"tags":[{"name":"SDL","slug":"SDL","count":2,"path":"api/tags/SDL.json"},{"name":"CPP","slug":"CPP","count":2,"path":"api/tags/CPP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\"> 🔖介绍</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#sdl-%E6%96%87%E6%A1%A3\"><span class=\"toc-text\"> SDL 文档</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#sdl-%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%92%8C%E7%9B%B8%E5%85%B3%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\"> SDL 常用类和相关接口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\"> 基础函数接口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\"> 1. 初始化相关</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sdl_window-%E7%AA%97%E5%8F%A3%E7%B1%BB\"><span class=\"toc-text\"> SDL_Window 窗口类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sdl_renderer-%E6%B8%B2%E6%9F%93%E5%99%A8\"><span class=\"toc-text\"> SDL_Renderer 渲染器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sdl_surface-%E5%B9%B3%E9%9D%A2%E7%B1%BB\"><span class=\"toc-text\"> SDL_Surface 平面类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sdl_texture-%E7%BA%B9%E7%90%86%E7%B1%BB\"><span class=\"toc-text\"> SDL_Texture 纹理类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sdl_event-%E4%BA%8B%E4%BB%B6%E7%B1%BB\"><span class=\"toc-text\"> SDL_Event 事件类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sdl_color-%E9%A2%9C%E8%89%B2%E7%B1%BB\"><span class=\"toc-text\"> SDL_Color 颜色类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ttf_font-%E5%AD%97%E4%BD%93%E7%B1%BB\"><span class=\"toc-text\"> TTF_Font 字体类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#mix_music-%E9%9F%B3%E4%B9%90%E7%B1%BB\"><span class=\"toc-text\"> Mix_Music 音乐类</span></a></li></ol></li></ol>","author":{"name":"zExNocs","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一个喜欢摸鱼的人。<p>去码头整点薯条。</p>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/img/svg/github.svg","link":"https://github.com/zExNocs"},"bilibili":{"icon":"/img/svg/bilibili.svg","link":"https://space.bilibili.com/13423200"},"steam":{"icon":"/img/svg/steam.svg","link":"https://steamcommunity.com/id/zExNocs/"},"QQ":{"icon":"/img/svg/QQ.svg","link":"https://qm.qq.com/q/XtwuUQpNCg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"SAI - Symbolic Artificial Intelligence 符号人工智能","uid":"a4898085ad7e33e4bdefd0d828d621b7","slug":"笔记/笔记-SAI-符号人工智能","date":"2024-10-18T00:40:00.000Z","updated":"2024-10-24T01:30:18.505Z","comments":true,"path":"api/articles/笔记/笔记-SAI-符号人工智能.json","keywords":null,"cover":"\\img\\post\\笔记\\笔记-SAI-符号人工智能\\cover.jpg","text":"有关符号人工智能的笔记。...","permalink":"/post/笔记/笔记-SAI-符号人工智能","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"笔记","slug":"笔记","count":8,"path":"api/categories/笔记.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":5,"path":"api/tags/Algorithm.json"},{"name":"AI","slug":"AI","count":3,"path":"api/tags/AI.json"},{"name":"Optimization","slug":"Optimization","count":3,"path":"api/tags/Optimization.json"}],"author":{"name":"zExNocs","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一个喜欢摸鱼的人。<p>去码头整点薯条。</p>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/img/svg/github.svg","link":"https://github.com/zExNocs"},"bilibili":{"icon":"/img/svg/bilibili.svg","link":"https://space.bilibili.com/13423200"},"steam":{"icon":"/img/svg/steam.svg","link":"https://steamcommunity.com/id/zExNocs/"},"QQ":{"icon":"/img/svg/QQ.svg","link":"https://qm.qq.com/q/XtwuUQpNCg"}}}},"feature":false},"next_post":{"title":"塔防游戏笔记","uid":"c540c9b9a4bdc44ea456b40df3a36e31","slug":"笔记/笔记-塔防游戏笔记","date":"2024-06-25T20:47:56.000Z","updated":"2024-10-18T20:48:56.123Z","comments":true,"path":"api/articles/笔记/笔记-塔防游戏笔记.json","keywords":null,"cover":"\\img\\post\\笔记\\笔记-塔防游戏笔记\\cover.png","text":"这是关于 Voidmatrix 塔防游戏课程笔记。...","permalink":"/post/笔记/笔记-塔防游戏笔记","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"笔记","slug":"笔记","count":8,"path":"api/categories/笔记.json"}],"tags":[{"name":"Game Engine","slug":"Game-Engine","count":1,"path":"api/tags/Game-Engine.json"},{"name":"SDL","slug":"SDL","count":2,"path":"api/tags/SDL.json"},{"name":"CPP","slug":"CPP","count":2,"path":"api/tags/CPP.json"}],"author":{"name":"zExNocs","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一个喜欢摸鱼的人。<p>去码头整点薯条。</p>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/img/svg/github.svg","link":"https://github.com/zExNocs"},"bilibili":{"icon":"/img/svg/bilibili.svg","link":"https://space.bilibili.com/13423200"},"steam":{"icon":"/img/svg/steam.svg","link":"https://steamcommunity.com/id/zExNocs/"},"QQ":{"icon":"/img/svg/QQ.svg","link":"https://qm.qq.com/q/XtwuUQpNCg"}}}},"feature":false}}