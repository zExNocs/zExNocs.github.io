{"title":"ADE - Algorithms Data Structures and Efficiency 算法数据结构和效率","uid":"8e94a57200662cea86ae71df183554b9","slug":"笔记-ADE-算法数据结构和效率","date":"2024-05-25T00:42:20.000Z","updated":"2024-05-25T12:22:45.798Z","comments":true,"path":"api/articles/笔记-ADE-算法数据结构和效率.json","keywords":null,"cover":"\\img\\cover\\ADE.png","content":"<h1>背景</h1>\n<p>早在一年前就知道了这个有关算法和数据结构的课程。作为一个退役OIer，肯定是有很大兴趣的，毕竟很多以前都接触过，例如堆、图论、动态规划。</p>\n<p>不过这个课程除了算法和数据结构以外，还系统性地学习了一些理论上的知识，比如说Big-Oh家族。学算法竞赛的时候只是经常听过、用过、说过时间复杂度、空间复杂度，不过对这一类知识一直都处于一种一知半解的状态。一直以来对它的理解都停留在算法在时间和空间上对某一或多种变量/输入的增长程度上。</p>\n<h1>介绍</h1>\n<p>在本笔记中对算法的效率分析主要关注<strong>程序的运行时间(running time)</strong>。</p>\n<p>本笔记主要分为下面四个部分(并不是按照课程顺序排序，而是相似课程归纳)：</p>\n<ul>\n<li>一. Big-Oh家族和理论及有关复杂度的概念和计算</li>\n<li>二. Master定理</li>\n<li>三. 数据结构</li>\n<li>四. 算法</li>\n</ul>\n<h1>一. Big-Oh家族</h1>\n<h3 id=\"基础知识-思考\">基础知识 &amp; 思考</h3>\n<p>如何评估一个算法的效率？最直接的方式就是在程序输入后，何时才能获得输出值。正如介绍所说，本笔记中对算法的效率分析主要是从程序的运行时间来评估的。</p>\n<p>在同一个程序中，程序的运行时间往往会随着输入大小(input size)而增加。即使固定输入大小，实际运行时间通常也会有所不同，这取决于输入的详细信息。例如在最短路算法中，即使是相同数量的点和边，不同的连接方法也会导致运行时间不同 <s>(关于SPFA，它死了)</s> 。</p>\n<h5 id=\"方法一：实验统计\">方法一：实验统计</h5>\n<p>最基础的评估算法效率的方法——实验统计</p>\n<ul>\n<li>写一个程序实施该算法</li>\n<li>使用不同的输入大小和输入信息运行程序</li>\n<li>记录实际运行时间</li>\n<li>绘制并使用统计学分析（如回归分析）</li>\n</ul>\n<p>在固定输入大小、不同输入信息中，统计中获得最佳运行时间、最差运行时间、平均运行时间，我们通常会关注<strong>最差的情况</strong>，主要原因是平均时间往往很难以去分析 (例如为什么在判断一个公司工资待遇往往不是使用平均值，更多的是最低工资)。</p>\n<h1>二. Master定理</h1>\n<h1>三. 数据结构</h1>\n<h1>四. 算法</h1>\n","feature":false,"text":"有关Big-Oh家族、Master定理和算法与数据结构的课程笔记。...","permalink":"/post/笔记-ADE-算法数据结构和效率","photos":[],"count_time":{"symbolsCount":805,"symbolsTime":"1 mins."},"categories":[{"name":"笔记","slug":"笔记","count":3,"path":"api/categories/笔记.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":3,"path":"api/tags/Algorithm.json"},{"name":"Data Structure","slug":"Data-Structure","count":2,"path":"api/tags/Data-Structure.json"},{"name":"Big Oh","slug":"Big-Oh","count":1,"path":"api/tags/Big-Oh.json"},{"name":"Notes","slug":"Notes","count":3,"path":"api/tags/Notes.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">背景</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">介绍</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">一. Big-Oh家族</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E6%80%9D%E8%80%83\"><span class=\"toc-text\">基础知识 &amp; 思考</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A%E5%AE%9E%E9%AA%8C%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">方法一：实验统计</span></a></li></ol></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">二. Master定理</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">三. 数据结构</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">四. 算法</span></a></li></ol>","author":{"name":"zExNocs","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一个喜欢摸鱼的人。<p>去码头整点薯条。</p>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/img/svg/github.svg","link":"https://github.com/zExNocs"},"bilibili":{"icon":"/img/svg/bilibili.svg","link":"https://space.bilibili.com/13423200"},"QQ":{"icon":"/img/svg/QQ.svg","link":"https://qm.qq.com/q/XtwuUQpNCg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"AIM - Optimization 优化算法","uid":"ca7a89ba385cdbc1ce7b55d4c88122bd","slug":"笔记-AIM-优化算法","date":"2024-05-25T10:52:11.000Z","updated":"2024-05-25T11:17:26.388Z","comments":true,"path":"api/articles/笔记-AIM-优化算法.json","keywords":null,"cover":"\\img\\cover\\AIM.png","text":"有关优化算法(元启发式、超启发式)的课程笔记。...","permalink":"/post/笔记-AIM-优化算法","photos":[],"count_time":{"symbolsCount":178,"symbolsTime":"1 mins."},"categories":[{"name":"笔记","slug":"笔记","count":3,"path":"api/categories/笔记.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":3,"path":"api/tags/Algorithm.json"},{"name":"AI","slug":"AI","count":1,"path":"api/tags/AI.json"},{"name":"Optimization","slug":"Optimization","count":1,"path":"api/tags/Optimization.json"}],"author":{"name":"zExNocs","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一个喜欢摸鱼的人。<p>去码头整点薯条。</p>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/img/svg/github.svg","link":"https://github.com/zExNocs"},"bilibili":{"icon":"/img/svg/bilibili.svg","link":"https://space.bilibili.com/13423200"},"QQ":{"icon":"/img/svg/QQ.svg","link":"https://qm.qq.com/q/XtwuUQpNCg"}}}},"feature":false},"next_post":{"title":"算法和数据结构导航","uid":"f2a68e25ffce8d6b8f475f30117ea7f4","slug":"导航-算法和数据结构导航","date":"2024-05-24T17:43:22.000Z","updated":"2024-05-25T00:57:44.060Z","comments":true,"path":"api/articles/导航-算法和数据结构导航.json","keywords":null,"cover":"\\img\\cover\\算法和数据结构导航.jpg","text":"关于算法与数据结构博客的导航。...","permalink":"/post/导航-算法和数据结构导航","photos":[],"count_time":{"symbolsCount":8,"symbolsTime":"1 mins."},"categories":[{"name":"导航","slug":"导航","count":4,"path":"api/categories/导航.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":3,"path":"api/tags/Algorithm.json"},{"name":"Data Structure","slug":"Data-Structure","count":2,"path":"api/tags/Data-Structure.json"}],"author":{"name":"zExNocs","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"一个喜欢摸鱼的人。<p>去码头整点薯条。</p>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/img/svg/github.svg","link":"https://github.com/zExNocs"},"bilibili":{"icon":"/img/svg/bilibili.svg","link":"https://space.bilibili.com/13423200"},"QQ":{"icon":"/img/svg/QQ.svg","link":"https://qm.qq.com/q/XtwuUQpNCg"}}}},"feature":true}}